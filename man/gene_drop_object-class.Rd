% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gene_dropping_functions.R, R/write_bed.R,
%   R/write_output.R
\docType{class}
\name{gene_drop_object-class}
\alias{gene_drop_object-class}
\alias{gene_drop_object}
\alias{get_pedigree}
\alias{get_haplotype_info}
\alias{get_map_info}
\alias{get_genotype_matrix}
\alias{id_info}
\alias{id_ref}
\alias{extract_genotype_mat}
\alias{write_bed}
\alias{write_file}
\title{An S4 class to store gene-dropping output}
\usage{
get_pedigree(gene_drop_object)

get_haplotype_info(gene_drop_object)

get_map_info(gene_drop_object)

get_genotype_matrix(gene_drop_object)

id_info(gene_drop_object, ids)

id_ref(gene_drop_object, ids)

extract_genotype_mat(gene_drop_object, ids = "ALL", loci = "ALL")

write_bed(
  gene_drop_object,
  filename = "GeneDrop_out",
  cM_positions = NULL,
  gen_positions = NULL,
  fast = TRUE
)

write_file(gene_drop_object, filename = "GeneDrop_out", format_short = FALSE)
}
\arguments{
\item{gene_drop_object}{A gene_drop_object}

\item{ids}{A scalar or vector of IDs to include. Defaults to ALL}

\item{loci}{A scalar or vector of loci to include. Defaults to ALL}

\item{filename}{A string to be used as the output file names.  Default 'GeneDrop_out'}

\item{cM_positions}{A vector or NULL.  Provides map distance information to be included in the .bim file
Either NULL in which case all values will be 0, or a vector the same length as the number of loci with mapping distances in cM.}

\item{gen_positions}{A vector or NULL.  Provides physical distance information to be included in the .bim file
Either NULL in which case all values will be 0, or a vector the same length as the number of loci with distances in base pairs.}

\item{fast}{Logical. Default is TRUE.  Determines if the whole genotype matrix should be extracted prior to
writing the files.  This is faster but requires more memory.  The function automatically switches the value
to FALSE if the genotype matrix can't be extracted whole.}

\item{format_short}{Logical, Default is FALSE.  When FALSE there is two lines (the two haplotypes) per individual,
when TRUE the file instead contains one line per individual with two columns per loci.}
}
\description{
An S4 class to store gene-dropping output
}
\section{Functions}{
\itemize{
\item \code{get_pedigree}: A method to access the pedigree of the gene-drop object

\item \code{get_haplotype_info}: A method to access the haplotype source information of the gene-drop object

\item \code{get_map_info}: A method to access the mapping information of the gene-drop object

\item \code{get_genotype_matrix}: A method to access the genotype matrix of the gene-drop object

\item \code{id_info}: A method to extract the indivdual information from the pedigree

\item \code{id_ref}: A method to get and individuals row reference from the pedigree

\item \code{extract_genotype_mat}: A method to return a genotype matrix

\item \code{write_bed}: A method to write gene-drop objects to plink files.
It might take a while and hasn't been fully tested, so use with caution.

\item \code{write_file}: A method to write the genotype matrix to a file.
For a large matrix this will take a while and create a large file.
}}

\section{Slots}{

\describe{
\item{\code{genotype_matrix}}{A list of vectors each storing a haplotype}

\item{\code{haplotype_info}}{A list containing haplotype information for tracing alleles}

\item{\code{pedgree}}{The pedigree that was passed to the gene-dropping function}

\item{\code{map_info}}{A matrix containing mapping information and recombination frequencies used}
}}

\examples{

}
